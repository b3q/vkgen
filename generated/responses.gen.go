// Code generated by vkgen; DO NOT EDIT.

package generated

type AccountChangePasswordResponse struct {
	Token  string `json:"token"`            // New token
	Secret string `json:"secret,omitempty"` // New secret
}

type AccountGetActiveOffersResponse struct {
	Count int64          `json:"count"` // Total number
	Items []AccountOffer `json:"items"`
}

// Permissions mask
type AccountGetAppPermissionsResponse int64

type AccountGetBannedResponse struct {
	Count    int64          `json:"count"` // Total number
	Items    []int64        `json:"items"`
	Profiles []UsersUserMin `json:"profiles,omitempty"`
	Groups   []GroupsGroup  `json:"groups,omitempty"`
}

type AccountGetCountersResponse AccountAccountCounters

type AccountGetInfoResponse AccountInfo

type AccountGetProfileInfoResponse AccountUserSettings

type AccountGetPushSettingsResponse AccountPushSettings

type AccountSaveProfileInfoResponse struct {
	Changed     BaseBoolInt        `json:"changed"` // 1 if changes has been processed
	NameRequest AccountNameRequest `json:"name_request"`
}

// true if success
type AdsAddOfficeUsersResponse bool

type AdsCheckLinkResponse AdsLinkStatus

type AdsCreateAdsResponse []int64

type AdsCreateCampaignsResponse []int64

type AdsCreateClientsResponse []int64

type AdsCreateTargetGroupResponse struct {
	ID    int64  `json:"id"`    // Group ID
	Pixel string `json:"pixel"` // Pixel code
}

type AdsDeleteAdsResponse []int64

// 0 if success
type AdsDeleteCampaignsResponse int64

// 0 if sucess
type AdsDeleteClientsResponse int64

type AdsGetAccountsResponse []AdsAccount

type AdsGetAdsLayoutResponse []AdsAdLayout

type AdsGetAdsTargetingResponse []AdsTargSettings

type AdsGetAdsResponse []AdsAd

// Budget
type AdsGetBudgetResponse int64

type AdsGetCampaignsResponse []AdsCampaign

type AdsGetCategoriesResponse struct {
	V1 []AdsCategory `json:"v1"` // Old categories
	V2 []AdsCategory `json:"v2"` // Actual categories
}

type AdsGetClientsResponse []AdsClient

type AdsGetDemographicsResponse []AdsDemoStats

type AdsGetFloodStatsResponse AdsFloodStats

type AdsGetLookalikeRequestsResponse struct {
	Count int64                 `json:"count"` // Total count of found lookalike requests
	Items []AdsLookalikeRequest `json:"items"` // found lookalike requests
}

type AdsGetMusiciansResponse struct {
	Items []AdsMusician `json:"items"` // Musicians
}

type AdsGetOfficeUsersResponse []AdsUsers

type AdsGetPostsReachResponse []AdsPromotedPostReach

type AdsGetRejectionReasonResponse AdsRejectReason

type AdsGetStatisticsResponse []AdsStats

type AdsGetSuggestionsCitiesResponse []AdsTargSuggestionsCities

type AdsGetSuggestionsRegionsResponse []AdsTargSuggestionsRegions

type AdsGetSuggestionsResponse []AdsTargSuggestions

type AdsGetSuggestionsSchoolsResponse []AdsTargSuggestionsSchools

type AdsGetTargetGroupsResponse []AdsTargetGroup

type AdsGetTargetingStatsResponse AdsTargStats

// Photo upload URL
type AdsGetUploadURLResponse string

// Video upload URL
type AdsGetVideoUploadURLResponse string

// Imported contacts number
type AdsImportTargetContactsResponse int64

// true if success
type AdsRemoveOfficeUsersResponse bool

type AdsUpdateAdsResponse []int64

// Campaign ID
type AdsUpdateCampaignsResponse int64

// Client ID
type AdsUpdateClientsResponse int64

type AppsGetCatalogResponse struct {
	Count int64     `json:"count"` // Total number
	Items []AppsApp `json:"items"`
}

type AppsGetFriendsListResponse struct {
	Count int64           `json:"count"` // Total number
	Items []UsersUserFull `json:"items"`
}

type AppsGetLeaderboardExtendedResponse struct {
	Count    int64             `json:"count"` // Total number
	Items    []AppsLeaderboard `json:"items"`
	Profiles []UsersUserMin    `json:"profiles"`
}

type AppsGetLeaderboardResponse struct {
	Count int64             `json:"count"` // Total number
	Items []AppsLeaderboard `json:"items"`
}

type AppsGetScopesResponse struct {
	Count int64       `json:"count"` // Total number
	Items []AppsScope `json:"items"`
}

// Score number
type AppsGetScoreResponse int64

type AppsGetResponse struct {
	Count int64     `json:"count"` // Total number of applications
	Items []AppsApp `json:"items"` // List of applications
}

// Request ID
type AppsSendRequestResponse int64

type AuthRestoreResponse struct {
	Success int64  `json:"success"` // 1 if success
	Sid     string `json:"sid"`     // Parameter needed to grant access by code
}

type BaseBoolResponse BaseBoolInt

type BaseGetUploadServerResponse BaseUploadServer

type BaseOkResponse int64

const (
	BaseOkResponseOk BaseOkResponse = 1
)

// Topic ID
type BoardAddTopicResponse int64

// Comment ID
type BoardCreateCommentResponse int64

type BoardGetCommentsExtendedResponse struct {
	Count    int64               `json:"count"` // Total number
	Items    []BoardTopicComment `json:"items"`
	Poll     *BoardTopicPoll     `json:"poll,omitempty"`
	Profiles []UsersUser         `json:"profiles"`
	Groups   []GroupsGroup       `json:"groups"`
}

type BoardGetCommentsResponse struct {
	Count int64               `json:"count"` // Total number
	Items []BoardTopicComment `json:"items"`
	Poll  *BoardTopicPoll     `json:"poll,omitempty"`
}

type BoardGetTopicsExtendedResponse struct {
	Count        int64             `json:"count"` // Total number
	Items        []BoardTopic      `json:"items"`
	DefaultOrder BoardDefaultOrder `json:"default_order"`
	CanAddTopics BaseBoolInt       `json:"can_add_topics"` // Information whether current user can add topic
	Profiles     []UsersUserMin    `json:"profiles"`
}

type BoardGetTopicsResponse struct {
	Count        int64             `json:"count"` // Total number
	Items        []BoardTopic      `json:"items"`
	DefaultOrder BoardDefaultOrder `json:"default_order"`
	CanAddTopics BaseBoolInt       `json:"can_add_topics"` // Information whether current user can add topic
}

type DatabaseGetChairsResponse struct {
	Count int64        `json:"count"` // Total number
	Items []BaseObject `json:"items"`
}

type DatabaseGetCitiesByIDResponse []BaseObject

type DatabaseGetCitiesResponse struct {
	Count int64          `json:"count"` // Total number
	Items []DatabaseCity `json:"items"`
}

type DatabaseGetCountriesByIDResponse []BaseCountry

type DatabaseGetCountriesResponse struct {
	Count int64         `json:"count"` // Total number
	Items []BaseCountry `json:"items"`
}

type DatabaseGetFacultiesResponse struct {
	Count int64             `json:"count"` // Total number
	Items []DatabaseFaculty `json:"items"`
}

type DatabaseGetMetroStationsByIDResponse []DatabaseStation

type DatabaseGetMetroStationsResponse struct {
	Count int64             `json:"count"` // Total number
	Items []DatabaseStation `json:"items"`
}

type DatabaseGetRegionsResponse struct {
	Count int64            `json:"count"` // Total number
	Items []DatabaseRegion `json:"items"`
}

type DatabaseGetSchoolClassesResponse [][]interface{}

type DatabaseGetSchoolsResponse struct {
	Count int64            `json:"count"` // Total number
	Items []DatabaseSchool `json:"items"`
}

type DatabaseGetUniversitiesResponse struct {
	Count int64                `json:"count"` // Total number
	Items []DatabaseUniversity `json:"items"`
}

type DocsAddResponse struct {
	ID int64 `json:"id"` // Doc ID
}

type DocsGetByIDResponse []DocsDoc

type DocsGetTypesResponse struct {
	Count int64          `json:"count"` // Total number
	Items []DocsDocTypes `json:"items"`
}

type DocsGetUploadServerResponse BaseUploadServer

type DocsGetResponse struct {
	Count int64     `json:"count"` // Total number
	Items []DocsDoc `json:"items"`
}

type DocsSaveResponse struct {
	Type         *DocsDocAttachmentType `json:"type,omitempty"`
	AudioMessage *MessagesAudioMessage  `json:"audio_message,omitempty"`
	Doc          *DocsDoc               `json:"doc,omitempty"`
	Graffiti     *MessagesGraffiti      `json:"graffiti,omitempty"`
}

type DocsSearchResponse struct {
	Count int64     `json:"count"` // Total number
	Items []DocsDoc `json:"items"`
}

type DownloadedGamesPaidStatusResponse struct {
	IsPaid bool `json:"is_paid"` // Game has been paid
}

type FaveAddTagResponse FaveTag

type FaveGetPagesResponse struct {
	Count int64      `json:"count"`
	Items []FavePage `json:"items"`
}

type FaveGetTagsResponse struct {
	Count int64     `json:"count"`
	Items []FaveTag `json:"items"`
}

type FaveGetExtendedResponse struct {
	Count    int64           `json:"count"` // Total number
	Items    []FaveBookmark  `json:"items"`
	Profiles []UsersUserFull `json:"profiles"`
	Groups   []GroupsGroup   `json:"groups"`
}

type FaveGetResponse struct {
	Count int64          `json:"count"` // Total number
	Items []FaveBookmark `json:"items"`
}

type FriendsAddListResponse struct {
	ListID int64 `json:"list_id"` // List ID
}

// Friend request status
// Friend request status
type FriendsAddResponse int64

const (
	FriendsAddResponseSEND     FriendsAddResponse = 1
	FriendsAddResponseAPPROVED FriendsAddResponse = 2
	FriendsAddResponseRESEND   FriendsAddResponse = 4
)

type FriendsAreFriendsExtendedResponse []FriendsFriendExtendedStatus

type FriendsAreFriendsResponse []FriendsFriendStatus

type FriendsDeleteResponse struct {
	Success           int64 `json:"success"`
	FriendDeleted     int64 `json:"friend_deleted,omitempty"`      // Returns 1 if friend has been deleted
	OutRequestDeleted int64 `json:"out_request_deleted,omitempty"` // Returns 1 if out request has been canceled
	InRequestDeleted  int64 `json:"in_request_deleted,omitempty"`  // Returns 1 if incoming request has been declined
	SuggestionDeleted int64 `json:"suggestion_deleted,omitempty"`  // Returns 1 if suggestion has been declined
}

type FriendsGetAppUsersResponse []int64

type FriendsGetByPhonesResponse []FriendsUserXtrPhone

type FriendsGetListsResponse struct {
	Count int64                `json:"count"` // Total number of friends lists
	Items []FriendsFriendsList `json:"items"`
}

type FriendsGetMutualResponse []int64

type FriendsGetMutualTargetUidsResponse []FriendsMutualFriend

type FriendsGetOnlineOnlineMobileResponse struct {
	Online       []int64 `json:"online"`
	OnlineMobile []int64 `json:"online_mobile"`
}

type FriendsGetOnlineResponse []int64

type FriendsGetRecentResponse []int64

type FriendsGetRequestsExtendedResponse struct {
	Count int64                       `json:"count"` // Total requests number
	Items []FriendsRequestsXtrMessage `json:"items"`
}

type FriendsGetRequestsNeedMutualResponse struct {
	Count int64             `json:"count"` // Total requests number
	Items []FriendsRequests `json:"items"`
}

type FriendsGetRequestsResponse struct {
	Count       int64   `json:"count"` // Total requests number
	Items       []int64 `json:"items"`
	CountUnread int64   `json:"count_unread"` // Total unread requests number
}

type FriendsGetSuggestionsResponse struct {
	Count int64           `json:"count"` // Total results number
	Items []UsersUserFull `json:"items"`
}

type FriendsGetFieldsResponse struct {
	Count int64                 `json:"count"` // Total friends number
	Items []FriendsUserXtrLists `json:"items"`
}

type FriendsGetResponse struct {
	Count int64   `json:"count"` // Total friends number
	Items []int64 `json:"items"`
}

type FriendsSearchResponse struct {
	Count int64           `json:"count"` // Total number
	Items []UsersUserFull `json:"items"`
}

type GiftsGetResponse struct {
	Count int64       `json:"count"` // Total number
	Items []GiftsGift `json:"items"`
}

type GroupsAddAddressResponse GroupsAddress

type GroupsAddCallbackServerResponse struct {
	ServerID int64 `json:"server_id"`
}

type GroupsAddLinkResponse GroupsGroupLink

type GroupsCreateResponse GroupsGroup

// Result
type GroupsEditAddressResponse GroupsAddress

type GroupsGetAddressesResponse struct {
	Count int64           `json:"count"` // Total count of addresses
	Items []GroupsAddress `json:"items"`
}

type GroupsGetBannedResponse struct {
	Count int64              `json:"count"` // Total users number
	Items []GroupsBannedItem `json:"items"`
}

type GroupsGetByIDResponse []GroupsGroupFull

type GroupsGetCallbackConfirmationCodeResponse struct {
	Code string `json:"code"` // Confirmation code
}

type GroupsGetCallbackServersResponse struct {
	Count int64                  `json:"count"`
	Items []GroupsCallbackServer `json:"items"`
}

type GroupsGetCallbackSettingsResponse GroupsCallbackSettings

type GroupsGetCatalogInfoExtendedResponse struct {
	Enabled    int64                     `json:"enabled"` // Information whether catalog is enabled for current user
	Categories []GroupsGroupCategoryFull `json:"categories,omitempty"`
}

type GroupsGetCatalogInfoResponse struct {
	Enabled    int64                 `json:"enabled"` // Information whether catalog is enabled for current user
	Categories []GroupsGroupCategory `json:"categories,omitempty"`
}

type GroupsGetCatalogResponse struct {
	Count int64         `json:"count"` // Total communities number
	Items []GroupsGroup `json:"items"`
}

type GroupsGetInvitedUsersResponse struct {
	Count int64           `json:"count"` // Total communities number
	Items []UsersUserFull `json:"items"`
}

type GroupsGetInvitesExtendedResponse struct {
	Count    int64                     `json:"count"` // Total communities number
	Items    []GroupsGroupXtrInvitedBy `json:"items"`
	Profiles []UsersUserMin            `json:"profiles"`
	Groups   []GroupsGroupFull         `json:"groups"`
}

type GroupsGetInvitesResponse struct {
	Count int64                     `json:"count"` // Total communities number
	Items []GroupsGroupXtrInvitedBy `json:"items"`
}

type GroupsGetLongPollServerResponse GroupsLongPollServer

type GroupsGetLongPollSettingsResponse GroupsLongPollSettings

type GroupsGetMembersFieldsResponse struct {
	Count int64               `json:"count"` // Total members number
	Items []GroupsUserXtrRole `json:"items"`
}

type GroupsGetMembersFilterResponse struct {
	Count int64              `json:"count"` // Total members number
	Items []GroupsMemberRole `json:"items"`
}

type GroupsGetMembersResponse struct {
	Count int64   `json:"count"` // Total members number
	Items []int64 `json:"items"`
}

type GroupsGetRequestsFieldsResponse struct {
	Count int64           `json:"count"` // Total communities number
	Items []UsersUserFull `json:"items"`
}

type GroupsGetRequestsResponse struct {
	Count int64   `json:"count"` // Total communities number
	Items []int64 `json:"items"`
}

type GroupsGetSettingsResponse struct {
	Access             *GroupsGroupAccess              `json:"access,omitempty"`  // Community access settings
	Address            string                          `json:"address,omitempty"` // Community's page domain
	Audio              GroupsGroupAudio                `json:"audio"`             // Audio settings
	Articles           int64                           `json:"articles"`          // Articles settings
	CityID             int64                           `json:"city_id"`           // City id of group
	Contacts           *BaseBoolInt                    `json:"contacts,omitempty"`
	Links              *BaseBoolInt                    `json:"links,omitempty"`
	SectionsList       interface{}                     `json:"sections_list,omitempty"`
	MainSection        *GroupsGroupFullMainSection     `json:"main_section,omitempty"`
	SecondarySection   int64                           `json:"secondary_section,omitempty"`
	AgeLimits          int64                           `json:"age_limits,omitempty"`
	CountryID          int64                           `json:"country_id"`  // Country id of group
	Description        string                          `json:"description"` // Community description
	Docs               GroupsGroupDocs                 `json:"docs"`        // Docs settings
	Events             *BaseBoolInt                    `json:"events,omitempty"`
	ObsceneFilter      BaseBoolInt                     `json:"obscene_filter"`    // Information whether the obscene filter is enabled
	ObsceneStopwords   BaseBoolInt                     `json:"obscene_stopwords"` // Information whether the stopwords filter is enabled
	ObsceneWords       []string                        `json:"obscene_words"`     // The list of stop words
	EventGroupID       int64                           `json:"event_group_id,omitempty"`
	Photos             int64                           `json:"photos"`                    // Photos settings
	PublicCategory     int64                           `json:"public_category,omitempty"` // Information about the group category
	PublicCategoryList []GroupsGroupPublicCategoryList `json:"public_category_list,omitempty"`
	PublicDate         string                          `json:"public_date,omitempty"`
	PublicDateLabel    string                          `json:"public_date_label,omitempty"`
	PublicSubcategory  int64                           `json:"public_subcategory,omitempty"` // Information about the group subcategory
	Rss                string                          `json:"rss,omitempty"`                // URL of the RSS feed
	StartDate          int64                           `json:"start_date,omitempty"`         // Start date
	FinishDate         int64                           `json:"finish_date,omitempty"`        // Finish date in Unixtime format
	Subject            int64                           `json:"subject,omitempty"`            // Community subject ID
	SubjectList        []GroupsSubjectItem             `json:"subject_list,omitempty"`
	SuggestedPrivacy   int64                           `json:"suggested_privacy,omitempty"`
	Title              string                          `json:"title"`  // Community title
	Topics             GroupsGroupTopics               `json:"topics"` // Topics settings
	Twitter            *GroupsSettingsTwitter          `json:"twitter,omitempty"`
	Video              GroupsGroupVideo                `json:"video"`             // Video settings
	Wall               GroupsGroupWall                 `json:"wall"`              // Wall settings
	Website            string                          `json:"website,omitempty"` // Community website
	Phone              string                          `json:"phone,omitempty"`   // Community phone
	Email              string                          `json:"email,omitempty"`   // Community email
	Wiki               GroupsGroupWiki                 `json:"wiki"`              // Wiki settings
}

type GroupsGetTokenPermissionsResponse struct {
	Mask        int64                          `json:"mask"`
	Permissions []GroupsTokenPermissionSetting `json:"permissions"`
}

type GroupsGetExtendedResponse struct {
	Count int64             `json:"count"` // Total communities number
	Items []GroupsGroupFull `json:"items"`
}

type GroupsGetResponse struct {
	Count int64   `json:"count"` // Total communities number
	Items []int64 `json:"items"`
}

type GroupsIsMemberExtendedResponse struct {
	Member     BaseBoolInt  `json:"member"`               // Information whether user is a member of the group
	Invitation *BaseBoolInt `json:"invitation,omitempty"` // Information whether user has been invited to the group
	CanInvite  *BaseBoolInt `json:"can_invite,omitempty"` // Information whether user can be invited
	CanRecall  *BaseBoolInt `json:"can_recall,omitempty"` // Information whether user's invite to the group can be recalled
	Request    *BaseBoolInt `json:"request,omitempty"`    // Information whether user has sent request to the group
}

// Information whether user is a member of the group
type GroupsIsMemberResponse BaseBoolInt

type GroupsIsMemberUserIDsExtendedResponse []GroupsMemberStatusFull

type GroupsIsMemberUserIDsResponse []GroupsMemberStatus

type GroupsSearchResponse struct {
	Count int64         `json:"count"` // Total communities number
	Items []GroupsGroup `json:"items"`
}

type LeadsCheckUserResponse LeadsChecked

type LeadsCompleteResponse LeadsComplete

type LeadsGetStatsResponse LeadsLead

type LeadsGetUsersResponse []LeadsEntry

type LeadsMetricHitResponse struct {
	Result       bool   `json:"result"`        // Information whether request has been processed successfully
	RedirectLink string `json:"redirect_link"` // Redirect link
}

type LeadsStartResponse LeadsStart

type LikesAddResponse struct {
	Likes int64 `json:"likes"` // Total likes number
}

type LikesDeleteResponse struct {
	Likes int64 `json:"likes"` // Total likes number
}

type LikesGetListExtendedResponse struct {
	Count int64          `json:"count"` // Total number
	Items []UsersUserMin `json:"items"`
}

type LikesGetListResponse struct {
	Count int64   `json:"count"` // Total number
	Items []int64 `json:"items"`
}

type LikesIsLikedResponse struct {
	Liked  BaseBoolInt `json:"liked"`  // Information whether user liked the object
	Copied BaseBoolInt `json:"copied"` // Information whether user reposted the object
}

type MarketAddAlbumResponse struct {
	MarketAlbumID int64 `json:"market_album_id"` // Album ID
}

type MarketAddResponse struct {
	MarketItemID int64 `json:"market_item_id"` // Item ID
}

// Comment ID
type MarketCreateCommentResponse int64

// Returns 1 if request has been processed successfully (0 if the comment is not found)
type MarketDeleteCommentResponse BaseBoolInt

type MarketGetAlbumByIDResponse struct {
	Count int64               `json:"count"` // Total number
	Items []MarketMarketAlbum `json:"items"`
}

type MarketGetAlbumsResponse struct {
	Count int64               `json:"count"` // Total number
	Items []MarketMarketAlbum `json:"items"`
}

type MarketGetByIDExtendedResponse struct {
	Count int64                  `json:"count"` // Total number
	Items []MarketMarketItemFull `json:"items"`
}

type MarketGetByIDResponse struct {
	Count int64              `json:"count"` // Total number
	Items []MarketMarketItem `json:"items"`
}

type MarketGetCategoriesResponse struct {
	Count int64                  `json:"count"` // Total number
	Items []MarketMarketCategory `json:"items"`
}

type MarketGetCommentsResponse struct {
	Count int64             `json:"count"` // Total number
	Items []WallWallComment `json:"items"`
}

type MarketGetExtendedResponse struct {
	Count int64                  `json:"count"` // Total number
	Items []MarketMarketItemFull `json:"items"`
}

type MarketGetResponse struct {
	Count int64              `json:"count"` // Total number
	Items []MarketMarketItem `json:"items"`
}

// Returns 1 if request has been processed successfully (0 if the comment is not found)
type MarketRestoreCommentResponse BaseBoolInt

type MarketSearchExtendedResponse struct {
	Count int64                  `json:"count"` // Total number
	Items []MarketMarketItemFull `json:"items"`
}

type MarketSearchResponse struct {
	Count int64              `json:"count"` // Total number
	Items []MarketMarketItem `json:"items"`
}

// Chat ID
type MessagesCreateChatResponse int64

type MessagesDeleteChatPhotoResponse struct {
	MessageID int64        `json:"message_id"` // Service message ID
	Chat      MessagesChat `json:"chat"`
}

type MessagesDeleteConversationResponse struct {
	LastDeletedID int64 `json:"last_deleted_id"` // Id of the last message, that was deleted
}

type MessagesDeleteResponse map[string]int64

// Result
type MessagesEditResponse BaseBoolInt

type MessagesGetByConversationMessageIDResponse struct {
	Count int64             `json:"count"` // Total number
	Items []MessagesMessage `json:"items"`
}

type MessagesGetByIDExtendedResponse struct {
	Count    int64             `json:"count"` // Total number
	Items    []MessagesMessage `json:"items"`
	Profiles []UsersUserFull   `json:"profiles"`
	Groups   []GroupsGroupFull `json:"groups,omitempty"`
}

type MessagesGetByIDResponse struct {
	Count int64             `json:"count"` // Total number
	Items []MessagesMessage `json:"items"`
}

type MessagesGetChatPreviewResponse struct {
	Preview  MessageChatPreview `json:"preview"`
	Profiles []UsersUserFull    `json:"profiles"`
}

type MessagesGetChatChatIDsFieldsResponse []MessagesChatFull

type MessagesGetChatChatIDsResponse []MessagesChat

type MessagesGetChatFieldsResponse MessagesChatFull

type MessagesGetChatResponse MessagesChat

type MessagesGetConversationMembersResponse struct {
	Count            int64                        `json:"count"` // Chat members count
	Items            []MessagesConversationMember `json:"items"`
	ChatRestrictions *MessagesChatRestrictions    `json:"chat_restrictions,omitempty"`
	Profiles         []UsersUserFull              `json:"profiles,omitempty"`
	Groups           []GroupsGroupFull            `json:"groups,omitempty"`
}

type MessagesGetConversationsByIDExtendedResponse struct {
	Count    int64                  `json:"count"` // Total number
	Items    []MessagesConversation `json:"items"`
	Profiles []UsersUser            `json:"profiles,omitempty"`
}

type MessagesGetConversationsByIDResponse struct {
	Count int64                  `json:"count"` // Total number
	Items []MessagesConversation `json:"items"`
}

type MessagesGetConversationsResponse struct {
	Count       int64                             `json:"count"`                  // Total number
	UnreadCount int64                             `json:"unread_count,omitempty"` // Unread dialogs number
	Items       []MessagesConversationWithMessage `json:"items"`
	Profiles    []UsersUserFull                   `json:"profiles,omitempty"`
	Groups      []GroupsGroupFull                 `json:"groups,omitempty"`
}

type MessagesGetHistoryAttachmentsResponse struct {
	Items    []MessagesHistoryAttachment `json:"items"`
	NextFrom string                      `json:"next_from"` // Value for pagination
}

type MessagesGetHistoryResponse struct {
	Count    int64             `json:"count"` // Total number
	Items    []MessagesMessage `json:"items"`
	Profiles []UsersUserFull   `json:"profiles,omitempty"`
	Groups   []GroupsGroupFull `json:"groups,omitempty"`
}

type MessagesGetInviteLinkResponse struct {
	Link string `json:"link"`
}

type MessagesGetLastActivityResponse MessagesLastActivity

type MessagesGetLongPollHistoryResponse struct {
	History       [][]int64                `json:"history"`
	Groups        []GroupsGroup            `json:"groups"`
	Messages      MessagesLongpollMessages `json:"messages"`
	Profiles      []UsersUserFull          `json:"profiles"`
	Chats         []MessagesChat           `json:"chats"`
	NewPts        int64                    `json:"new_pts"` // Persistence timestamp
	More          bool                     `json:"more"`    // Has more
	Conversations []MessagesConversation   `json:"conversations"`
}

type MessagesGetLongPollServerResponse MessagesLongpollParams

type MessagesIsMessagesFromGroupAllowedResponse struct {
	IsAllowed BaseBoolInt `json:"is_allowed"`
}

type MessagesJoinChatByInviteLinkResponse struct {
	ChatID int64 `json:"chat_id"`
}

type MessagesMarkAsImportantResponse []int64

type MessagesPinResponse MessagesPinnedMessage

type MessagesSearchConversationsResponse struct {
	Count    int64                  `json:"count"` // Total results number
	Items    []MessagesConversation `json:"items"`
	Profiles []UsersUserFull        `json:"profiles"`
	Groups   []GroupsGroupFull      `json:"groups"`
}

type MessagesSearchResponse struct {
	Count int64             `json:"count"` // Total number
	Items []MessagesMessage `json:"items"`
}

// Message ID
type MessagesSendResponse int64

type MessagesSendUserIDsResponse []struct {
	PeerID    int64            `json:"peer_id"`
	MessageID int64            `json:"message_id"`
	Error     BaseMessageError `json:"error"`
}

type MessagesSetChatPhotoResponse struct {
	MessageID int64        `json:"message_id"` // Service message ID
	Chat      MessagesChat `json:"chat"`
}

type NewsfeedGetBannedExtendedResponse struct {
	Groups   []UsersUserFull   `json:"groups"`
	Profiles []GroupsGroupFull `json:"profiles"`
}

type NewsfeedGetBannedResponse struct {
	Groups  []int64 `json:"groups"`
	Members []int64 `json:"members"`
}

type NewsfeedGetCommentsResponse struct {
	Items    []NewsfeedNewsfeedItem `json:"items"`
	Profiles []UsersUserFull        `json:"profiles"`
	Groups   []GroupsGroupFull      `json:"groups"`
	NextFrom string                 `json:"next_from,omitempty"` // New from value
}

type NewsfeedGetListsExtendedResponse struct {
	Count int64              `json:"count"` // Total number
	Items []NewsfeedListFull `json:"items"`
}

type NewsfeedGetListsResponse struct {
	Count int64          `json:"count"` // Total number
	Items []NewsfeedList `json:"items"`
}

type NewsfeedGetMentionsResponse struct {
	Count int64              `json:"count"` // Total number
	Items []WallWallpostToID `json:"items"`
}

type NewsfeedGetRecommendedResponse struct {
	Items     []NewsfeedNewsfeedItem `json:"items"`
	Profiles  []UsersUserFull        `json:"profiles"`
	Groups    []GroupsGroupFull      `json:"groups"`
	NewOffset string                 `json:"new_offset"` // New offset value
	NextFrom  string                 `json:"next_from"`  // Next from value
}

type NewsfeedGetSuggestedSourcesResponse struct {
	Count int64 `json:"count"` // Total number
	Items []struct {
		Counters             GroupsCountersGroup         `json:"counters"`
		CropPhoto            BaseCropPhoto               `json:"crop_photo"`
		CanUploadVideo       BaseBoolInt                 `json:"can_upload_video"`
		WikiPage             string                      `json:"wiki_page"`
		MembersCount         int64                       `json:"members_count"`
		FixedPost            int64                       `json:"fixed_post"`
		LiveCovers           GroupsLiveCovers            `json:"live_covers"`
		Deactivated          string                      `json:"deactivated"`
		Cover                GroupsCover                 `json:"cover"`
		Sex                  BaseSex                     `json:"sex"`
		OnlineApp            int64                       `json:"online_app"`
		IsAdvertiser         BaseBoolInt                 `json:"is_advertiser"`
		FinishDate           int64                       `json:"finish_date"`
		IsClosed             json.RawMessage             `json:"is_closed"`
		LastName             string                      `json:"last_name"`
		FriendStatus         FriendsFriendStatusStatus   `json:"friend_status"`
		IsMember             BaseBoolInt                 `json:"is_member"`
		Status               string                      `json:"status"`
		MemberStatus         GroupsGroupFullMemberStatus `json:"member_status"`
		IsAdult              BaseBoolInt                 `json:"is_adult"`
		HasPhoto             BaseBoolInt                 `json:"has_photo"`
		Mutual               FriendsRequestsMutual       `json:"mutual"`
		City                 BaseObject                  `json:"city"`
		Contacts             []GroupsContactsItem        `json:"contacts"`
		BanInfo              GroupsGroupBanInfo          `json:"ban_info"`
		ID                   int64                       `json:"id"`
		CanCreateTopic       BaseBoolInt                 `json:"can_create_topic"`
		IsHiddenFromFeed     BaseBoolInt                 `json:"is_hidden_from_feed"`
		CanUploadStory       BaseBoolInt                 `json:"can_upload_story"`
		IsMessagesBlocked    BaseBoolInt                 `json:"is_messages_blocked"`
		MainSection          GroupsGroupFullMainSection  `json:"main_section"`
		CanSubscribePodcasts bool                        `json:"can_subscribe_podcasts"`
		VideoLiveLevel       int64                       `json:"video_live_level"`
		CanSeeAllPosts       BaseBoolInt                 `json:"can_see_all_posts"`
		ScreenName           string                      `json:"screen_name"`
		Photo50              string                      `json:"photo_50"`
		IsSubscribed         BaseBoolInt                 `json:"is_subscribed"`
		IsSubscribedPodcasts bool                        `json:"is_subscribed_podcasts"`
		Links                []GroupsLinksItem           `json:"links"`
		Activity             string                      `json:"activity"`
		AgeLimits            GroupsGroupFullAgeLimits    `json:"age_limits"`
		FirstName            string                      `json:"first_name"`
		CanAccessClosed      bool                        `json:"can_access_closed"`
		Country              BaseCountry                 `json:"country"`
		Market               GroupsMarketInfo            `json:"market"`
		HasMarketApp         bool                        `json:"has_market_app"`
		OnlineMobile         BaseBoolInt                 `json:"online_mobile"`
		Name                 string                      `json:"name"`
		Wall                 int64                       `json:"wall"`
		StartDate            int64                       `json:"start_date"`
		Trending             BaseBoolInt                 `json:"trending"`
		OnlineInfo           UsersOnlineInfo             `json:"online_info"`
		CanSubscribePosts    bool                        `json:"can_subscribe_posts"`
		IsAdmin              BaseBoolInt                 `json:"is_admin"`
		Site                 string                      `json:"site"`
		OnlineStatus         GroupsOnlineStatus          `json:"online_status"`
		CanSendNotify        BaseBoolInt                 `json:"can_send_notify"`
		CanPost              BaseBoolInt                 `json:"can_post"`
		CanUploadDoc         BaseBoolInt                 `json:"can_upload_doc"`
		AdminLevel           GroupsGroupAdminLevel       `json:"admin_level"`
		Online               BaseBoolInt                 `json:"online"`
		VideoLiveCount       int64                       `json:"video_live_count"`
		MainAlbumID          int64                       `json:"main_album_id"`
		Photo100             string                      `json:"photo_100"`
		Description          string                      `json:"description"`
		CanMessage           BaseBoolInt                 `json:"can_message"`
		Addresses            GroupsAddressesInfo         `json:"addresses"`
		Photo200             string                      `json:"photo_200"`
		Type                 json.RawMessage             `json:"type"`
		Hidden               int64                       `json:"hidden"`
		IsFavorite           BaseBoolInt                 `json:"is_favorite"`
		Verified             BaseBoolInt                 `json:"verified"`
	} `json:"items"`
}

type NewsfeedGetResponse struct {
	Items    []NewsfeedNewsfeedItem `json:"items"`
	Profiles []UsersUserFull        `json:"profiles"`
	Groups   []GroupsGroupFull      `json:"groups"`
	NextFrom string                 `json:"next_from"` // New from value
}

// List ID
type NewsfeedSaveListResponse int64

type NewsfeedSearchExtendedResponse struct {
	Items            []WallWallpostFull `json:"items"`
	Profiles         []UsersUserFull    `json:"profiles"`
	Groups           []GroupsGroupFull  `json:"groups"`
	SuggestedQueries []string           `json:"suggested_queries"`
	NextFrom         string             `json:"next_from"`
	Count            int64              `json:"count"`       // Filtered number
	TotalCount       int64              `json:"total_count"` // Total number
}

type NewsfeedSearchResponse struct {
	Items            []WallWallpostFull `json:"items"`
	SuggestedQueries []string           `json:"suggested_queries"`
	NextFrom         string             `json:"next_from"`
	Count            int64              `json:"count"`       // Filtered number
	TotalCount       int64              `json:"total_count"` // Total number
}

// Note ID
type NotesAddResponse int64

// Comment ID
type NotesCreateCommentResponse int64

type NotesGetByIDResponse NotesNote

type NotesGetCommentsResponse struct {
	Count int64              `json:"count"` // Total number
	Items []NotesNoteComment `json:"items"`
}

type NotesGetResponse struct {
	Count int64       `json:"count"` // Total number
	Items []NotesNote `json:"items"`
}

type NotificationsGetResponse struct {
	Count      int64                           `json:"count"` // Total number
	Items      []NotificationsNotificationItem `json:"items"`
	Profiles   []UsersUser                     `json:"profiles"`
	Groups     []GroupsGroup                   `json:"groups"`
	LastViewed int64                           `json:"last_viewed"` // Time when user has been checked notifications last time
	Photos     []PhotosPhoto                   `json:"photos"`
	Videos     []VideoVideo                    `json:"videos"`
	Apps       []AppsApp                       `json:"apps"`
	NextFrom   string                          `json:"next_from"`
	TTL        int64                           `json:"ttl"`
}

// Result
type NotificationsMarkAsViewedResponse BaseBoolInt

type NotificationsSendMessageResponse []NotificationsSendMessageItem

// Result
type OrdersCancelSubscriptionResponse BaseBoolInt

// New state
type OrdersChangeStateResponse string

type OrdersGetAmountResponse OrdersAmount

type OrdersGetByIDResponse []OrdersOrder

type OrdersGetUserSubscriptionByIDResponse OrdersSubscription

type OrdersGetUserSubscriptionsResponse struct {
	Count int64                `json:"count"` // Total number
	Items []OrdersSubscription `json:"items"`
}

type OrdersGetResponse []OrdersOrder

// Result
type OrdersUpdateSubscriptionResponse BaseBoolInt

type PagesGetHistoryResponse []PagesWikipageHistory

type PagesGetTitlesResponse []PagesWikipage

type PagesGetVersionResponse PagesWikipageFull

type PagesGetResponse PagesWikipageFull

// HTML source
type PagesParseWikiResponse string

// Page ID
type PagesSaveAccessResponse int64

// Page ID
type PagesSaveResponse int64

// Photo ID
type PhotosCopyResponse int64

type PhotosCreateAlbumResponse PhotosPhotoAlbumFull

// Created comment ID
type PhotosCreateCommentResponse int64

// Returns 1 if request has been processed successfully, 0 if the comment is not found
type PhotosDeleteCommentResponse BaseBoolInt

// Albums number
type PhotosGetAlbumsCountResponse int64

type PhotosGetAlbumsResponse struct {
	Count int64                  `json:"count"` // Total number
	Items []PhotosPhotoAlbumFull `json:"items"`
}

type PhotosGetAllCommentsResponse struct {
	Count int64                 `json:"count"` // Total number
	Items []PhotosCommentXtrPid `json:"items"`
}

type PhotosGetAllExtendedResponse struct {
	Count int64                          `json:"count"` // Total number
	Items []PhotosPhotoFullXtrRealOffset `json:"items"`
	More  BaseBoolInt                    `json:"more"` // Information whether next page is presented
}

type PhotosGetAllResponse struct {
	Count int64                      `json:"count"` // Total number
	Items []PhotosPhotoXtrRealOffset `json:"items"`
	More  BaseBoolInt                `json:"more"` // Information whether next page is presented
}

type PhotosGetByIDExtendedResponse []PhotosPhotoFull

type PhotosGetByIDResponse []PhotosPhoto

type PhotosGetCommentsExtendedResponse struct {
	Count      int64             `json:"count"`                 // Total number
	RealOffset int64             `json:"real_offset,omitempty"` // Real offset of the comments
	Items      []WallWallComment `json:"items"`
	Profiles   []UsersUserFull   `json:"profiles"`
	Groups     []GroupsGroupFull `json:"groups"`
}

type PhotosGetCommentsResponse struct {
	Count      int64             `json:"count"`       // Total number
	RealOffset int64             `json:"real_offset"` // Real offset of the comments
	Items      []WallWallComment `json:"items"`
}

type PhotosGetMarketUploadServerResponse BaseUploadServer

type PhotosGetMessagesUploadServerResponse PhotosPhotoUpload

type PhotosGetNewTagsResponse struct {
	Count int64                   `json:"count"` // Total number
	Items []PhotosPhotoXtrTagInfo `json:"items"`
}

type PhotosGetTagsResponse []PhotosPhotoTag

type PhotosGetUploadServerResponse PhotosPhotoUpload

type PhotosGetUserPhotosExtendedResponse struct {
	Count int64             `json:"count"` // Total number
	Items []PhotosPhotoFull `json:"items"`
}

type PhotosGetUserPhotosResponse struct {
	Count int64         `json:"count"` // Total number
	Items []PhotosPhoto `json:"items"`
}

type PhotosGetWallUploadServerResponse PhotosPhotoUpload

type PhotosGetExtendedResponse struct {
	Count int64             `json:"count"` // Total number
	Items []PhotosPhotoFull `json:"items"`
}

type PhotosGetResponse struct {
	Count int64         `json:"count"` // Total number
	Items []PhotosPhoto `json:"items"`
}

// Created tag ID
type PhotosPutTagResponse int64

// Returns 1 if request has been processed successfully, 0 if the comment is not found
type PhotosRestoreCommentResponse BaseBoolInt

type PhotosSaveMarketAlbumPhotoResponse []PhotosPhoto

type PhotosSaveMarketPhotoResponse []PhotosPhoto

type PhotosSaveMessagesPhotoResponse []PhotosPhoto

type PhotosSaveOwnerCoverPhotoResponse []BaseImage

type PhotosSaveOwnerPhotoResponse struct {
	PhotoHash     string `json:"photo_hash"`                // Photo hash
	PhotoSrc      string `json:"photo_src"`                 // Uploaded image url
	PhotoSrcBig   string `json:"photo_src_big,omitempty"`   // Uploaded image url
	PhotoSrcSmall string `json:"photo_src_small,omitempty"` // Uploaded image url
	Saved         int64  `json:"saved,omitempty"`           // Returns 1 if profile photo is saved
	PostID        int64  `json:"post_id,omitempty"`         // Created post ID
}

type PhotosSaveWallPhotoResponse []PhotosPhoto

type PhotosSaveResponse []PhotosPhoto

type PhotosSearchResponse struct {
	Count int64         `json:"count"` // Total number
	Items []PhotosPhoto `json:"items"`
}

// Result
type PollsAddVoteResponse BaseBoolInt

type PollsCreateResponse PollsPoll

// Result
type PollsDeleteVoteResponse BaseBoolInt

type PollsGetByIDResponse PollsPoll

type PollsGetVotersResponse []PollsVoters

type PrettyCardsCreateResponse struct {
	OwnerID int64  `json:"owner_id"` // Owner ID of created pretty card
	CardID  string `json:"card_id"`  // Card ID of created pretty card
}

type PrettyCardsDeleteResponse struct {
	OwnerID int64  `json:"owner_id"`        // Owner ID of deleted pretty card
	CardID  string `json:"card_id"`         // Card ID of deleted pretty card
	Error   string `json:"error,omitempty"` // Error reason if error happened
}

type PrettyCardsEditResponse struct {
	OwnerID int64  `json:"owner_id"` // Owner ID of edited pretty card
	CardID  string `json:"card_id"`  // Card ID of edited pretty card
}

type PrettyCardsGetByIDResponse []PrettyCardsPrettyCard

// Upload URL
type PrettyCardsGetUploadURLResponse string

type PrettyCardsGetResponse struct {
	Count int64                   `json:"count"` // Total number
	Items []PrettyCardsPrettyCard `json:"items"`
}

type SearchGetHintsResponse struct {
	Count            int64        `json:"count"`
	Items            []SearchHint `json:"items"`
	SuggestedQueries []string     `json:"suggested_queries,omitempty"`
}

type SecureCheckTokenResponse SecureTokenChecked

// App balance
type SecureGetAppBalanceResponse int64

type SecureGetSMSHistoryResponse []SecureSmsNotification

type SecureGetTransactionsHistoryResponse []SecureTransaction

type SecureGetUserLevelResponse []SecureLevel

type SecureGiveEventStickerResponse []struct {
	UserID int64  `json:"user_id"`
	Status string `json:"status"`
}

type SecureSendNotificationResponse []int64

type StatsGetPostReachResponse []StatsWallpostStat

type StatsGetResponse []StatsPeriod

type StatusGetResponse StatusStatus

type StorageGetKeysResponse []string

// Value of key
type StorageGetResponse string

type StorageGetV5110Response []StorageValue

type StorageGetWithKeysResponse []StorageValue

type StoriesGetBannedExtendedResponse struct {
	Count    int64             `json:"count"` // Stories count
	Items    []int64           `json:"items"`
	Profiles []UsersUserFull   `json:"profiles"`
	Groups   []GroupsGroupFull `json:"groups"`
}

type StoriesGetBannedResponse struct {
	Count int64   `json:"count"` // Stories count
	Items []int64 `json:"items"`
}

type StoriesGetByIDExtendedResponse struct {
	Count    int64             `json:"count"` // Stories count
	Items    []StoriesStory    `json:"items"`
	Profiles []UsersUserFull   `json:"profiles"`
	Groups   []GroupsGroupFull `json:"groups"`
}

type StoriesGetByIDResponse struct {
	Count int64          `json:"count"` // Stories count
	Items []StoriesStory `json:"items"`
}

type StoriesGetPhotoUploadServerResponse struct {
	UploadURL string  `json:"upload_url"` // Upload URL
	UserIDs   []int64 `json:"user_ids"`   // Users ID who can to see story.
}

type StoriesGetStatsResponse StoriesStoryStats

type StoriesGetVideoUploadServerResponse struct {
	UploadURL string  `json:"upload_url"` // Upload URL
	UserIDs   []int64 `json:"user_ids"`   // Users ID who can to see story.
}

type StoriesGetViewersExtendedV5115Response struct {
	Count        int64                `json:"count"` // Viewers count
	Items        []StoriesViewersItem `json:"items"`
	HiddenReason string               `json:"hidden_reason,omitempty"`
}

type StoriesGetViewersExtendedResponse struct {
	Count int64           `json:"count"` // Viewers count
	Items []UsersUserFull `json:"items"`
}

type StoriesGetV5113Response struct {
	Count            int64             `json:"count"`
	Items            []StoriesFeedItem `json:"items"`
	Profiles         []UsersUser       `json:"profiles,omitempty"`
	Groups           []GroupsGroup     `json:"groups,omitempty"`
	NeedUploadScreen bool              `json:"need_upload_screen,omitempty"`
}

type StoriesGetResponse struct {
	Count            int64              `json:"count"` // Stories count
	Items            [][]StoriesStory   `json:"items"`
	PromoData        *StoriesPromoBlock `json:"promo_data,omitempty"`
	Profiles         []UsersUser        `json:"profiles,omitempty"`
	Groups           []GroupsGroup      `json:"groups,omitempty"`
	NeedUploadScreen bool               `json:"need_upload_screen,omitempty"`
}

type StoriesUploadResponse struct {
	UploadResult string `json:"upload_result"` // A string hash that is used in the stories.save method
}

type StreamingGetServerURLResponse struct {
	Endpoint string `json:"endpoint"` // Server host
	Key      string `json:"key"`      // Access key
}

type UsersGetFollowersFieldsResponse struct {
	Count int64           `json:"count"` // Total number of available results
	Items []UsersUserFull `json:"items"`
}

type UsersGetFollowersResponse struct {
	Count int64   `json:"count"` // Total friends number
	Items []int64 `json:"items"`
}

type UsersGetSubscriptionsExtendedResponse struct {
	Count int64                    `json:"count"` // Total number of available results
	Items []UsersSubscriptionsItem `json:"items"`
}

type UsersGetSubscriptionsResponse struct {
	Users  UsersUsersArray   `json:"users"`
	Groups GroupsGroupsArray `json:"groups"`
}

type UsersGetResponse []UsersUserXtrCounters

type UsersSearchResponse struct {
	Count int64           `json:"count"` // Total number of available results
	Items []UsersUserFull `json:"items"`
}

type UtilsCheckLinkResponse UtilsLinkChecked

type UtilsGetLastShortenedLinksResponse struct {
	Count int64                    `json:"count"` // Total number of available results
	Items []UtilsLastShortenedLink `json:"items"`
}

type UtilsGetLinkStatsExtendedResponse UtilsLinkStatsExtended

type UtilsGetLinkStatsResponse UtilsLinkStats

// Time as Unixtime
type UtilsGetServerTimeResponse int64

type UtilsGetShortLinkResponse UtilsShortLink

type UtilsResolveScreenNameResponse UtilsDomainResolved

type VideoAddAlbumResponse struct {
	AlbumID int64 `json:"album_id"` // Created album ID
}

// Created comment ID
type VideoCreateCommentResponse int64

type VideoGetAlbumByIDResponse VideoVideoAlbumFull

type VideoGetAlbumsByVideoExtendedResponse struct {
	Count int64                 `json:"count"` // Total number
	Items []VideoVideoAlbumFull `json:"items"`
}

type VideoGetAlbumsByVideoResponse []int64

type VideoGetAlbumsExtendedResponse struct {
	Count int64                 `json:"count"` // Total number
	Items []VideoVideoAlbumFull `json:"items"`
}

type VideoGetAlbumsResponse struct {
	Count int64                 `json:"count"` // Total number
	Items []VideoVideoAlbumFull `json:"items"`
}

type VideoGetCommentsExtendedResponse struct {
	Count    int64             `json:"count"` // Total number
	Items    []WallWallComment `json:"items"`
	Profiles []UsersUserMin    `json:"profiles"`
	Groups   []GroupsGroupFull `json:"groups"`
}

type VideoGetCommentsResponse struct {
	Count int64             `json:"count"` // Total number
	Items []WallWallComment `json:"items"`
}

type VideoGetExtendedResponse struct {
	Count    int64             `json:"count"` // Total number
	Items    []VideoVideoFull  `json:"items"`
	Profiles []UsersUserMin    `json:"profiles"`
	Groups   []GroupsGroupFull `json:"groups"`
}

type VideoGetResponse struct {
	Count int64        `json:"count"` // Total number
	Items []VideoVideo `json:"items"`
}

// Returns 1 if request has been processed successfully, 0 if the comment is not found
type VideoRestoreCommentResponse BaseBoolInt

type VideoSaveResponse VideoSaveResult

type VideoSearchExtendedResponse struct {
	Count    int64             `json:"count"` // Total number
	Items    []VideoVideo      `json:"items"`
	Profiles []UsersUserMin    `json:"profiles"`
	Groups   []GroupsGroupFull `json:"groups"`
}

type VideoSearchResponse struct {
	Count int64        `json:"count"` // Total number
	Items []VideoVideo `json:"items"`
}

type WallCreateCommentResponse struct {
	CommentID int64 `json:"comment_id"` // Created comment ID
}

type WallEditResponse struct {
	PostID int64 `json:"post_id"` // Edited post ID
}

type WallGetByIDExtendedResponse struct {
	Items    []WallWallpostFull `json:"items"`
	Profiles []UsersUserFull    `json:"profiles"`
	Groups   []GroupsGroupFull  `json:"groups"`
}

type WallGetByIDResponse []WallWallpostFull

type WallGetCommentExtendedResponse struct {
	Items    []WallWallComment `json:"items"`
	Profiles []UsersUser       `json:"profiles"`
	Groups   []GroupsGroup     `json:"groups"`
}

type WallGetCommentResponse struct {
	Items []WallWallComment `json:"items"`
}

type WallGetCommentsExtendedResponse struct {
	Count             int64             `json:"count"` // Total number
	Items             []WallWallComment `json:"items"`
	ShowReplyButton   bool              `json:"show_reply_button,omitempty"`
	CanPost           bool              `json:"can_post,omitempty"`            // Information whether current user can comment the post
	GroupsCanPost     bool              `json:"groups_can_post,omitempty"`     // Information whether groups can comment the post
	CurrentLevelCount int64             `json:"current_level_count,omitempty"` // Count of replies of current level
	Profiles          []UsersUser       `json:"profiles"`
	Groups            []GroupsGroup     `json:"groups"`
}

type WallGetCommentsResponse struct {
	Count             int64             `json:"count"` // Total number
	Items             []WallWallComment `json:"items"`
	CanPost           bool              `json:"can_post,omitempty"`            // Information whether current user can comment the post
	GroupsCanPost     bool              `json:"groups_can_post,omitempty"`     // Information whether groups can comment the post
	CurrentLevelCount int64             `json:"current_level_count,omitempty"` // Count of replies of current level
}

type WallGetRepostsResponse struct {
	Items    []WallWallpostFull `json:"items"`
	Profiles []UsersUser        `json:"profiles"`
	Groups   []GroupsGroup      `json:"groups"`
}

type WallGetExtendedResponse struct {
	Count    int64              `json:"count"` // Total number
	Items    []WallWallpostFull `json:"items"`
	Profiles []UsersUserFull    `json:"profiles"`
	Groups   []GroupsGroupFull  `json:"groups"`
}

type WallGetResponse struct {
	Count int64              `json:"count"` // Total number
	Items []WallWallpostFull `json:"items"`
}

type WallPostAdsStealthResponse struct {
	PostID int64 `json:"post_id"` // Created post ID
}

type WallPostResponse struct {
	PostID int64 `json:"post_id"` // Created post ID
}

type WallRepostResponse struct {
	Success      int64 `json:"success"`
	PostID       int64 `json:"post_id"`       // Created post ID
	RepostsCount int64 `json:"reposts_count"` // Reposts number
	LikesCount   int64 `json:"likes_count"`   // Reposts number
}

type WallSearchExtendedResponse struct {
	Count    int64              `json:"count"` // Total number
	Items    []WallWallpostFull `json:"items"`
	Profiles []UsersUserFull    `json:"profiles"`
	Groups   []GroupsGroupFull  `json:"groups"`
}

type WallSearchResponse struct {
	Count int64              `json:"count"` // Total number
	Items []WallWallpostFull `json:"items"`
}

type WidgetsGetCommentsResponse struct {
	Count int64                  `json:"count"` // Total number
	Posts []WidgetsWidgetComment `json:"posts"`
}

type WidgetsGetPagesResponse struct {
	Count int64               `json:"count"` // Total number
	Pages []WidgetsWidgetPage `json:"pages"`
}
